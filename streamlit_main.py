import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime, timedelta
import numpy as np

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°–∏—Å—Ç–µ–º–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ - –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ CSS
def load_css():
    st.markdown("""
    <style>
    /* –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ */
    :root {
        --primary-color: #228B22;
        --secondary-color: #9ACD32;
        --accent-color: #FFD700;
        --background-color: #ffffff;
        --text-color: #2d3748;
        --muted-color: #718096;
        --border-color: #e2e8f0;
        --success-color: #228B22;
        --warning-color: #FFD700;
        --info-color: #9ACD32;
    }
    
    /* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
    .main .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
    
    /* –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */
    .metric-card {
        background: white;
        padding: 1.5rem;
        border-radius: 0.75rem;
        border: 1px solid var(--border-color);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
    }
    
    .metric-value {
        font-size: 2rem;
        font-weight: bold;
        margin: 0;
        color: var(--text-color);
    }
    
    .metric-label {
        font-size: 0.875rem;
        color: var(--muted-color);
        margin: 0;
    }
    
    .metric-change {
        font-size: 0.75rem;
        margin-top: 0.25rem;
    }
    
    .metric-change.positive {
        color: var(--success-color);
    }
    
    .metric-change.negative {
        color: #e53e3e;
    }
    
    /* –¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∏–ª–µ–π */
    .dataframe {
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
    }
    
    .dataframe thead th {
        background-color: #f7fafc;
        color: var(--text-color);
        font-weight: 500;
        border-bottom: 1px solid var(--border-color);
        padding: 0.75rem;
    }
    
    .dataframe tbody td {
        padding: 0.75rem;
        border-bottom: 1px solid var(--border-color);
    }
    
    /* –°—Ç–∞—Ç—É—Å –±–µ–π–¥–∂–∏ */
    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 0.375rem;
        font-size: 0.75rem;
        font-weight: 500;
        display: inline-block;
    }
    
    .status-registered {
        background-color: var(--primary-color);
        color: white;
    }
    
    .status-progress {
        background-color: var(--secondary-color);
        color: var(--text-color);
    }
    
    .status-waiting {
        background-color: var(--accent-color);
        color: var(--text-color);
    }
    
    .status-critical {
        background-color: #e53e3e;
        color: white;
    }
    
    /* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –±–µ–π–¥–∂–∏ */
    .priority-high {
        background-color: #e53e3e;
        color: white;
    }
    
    .priority-medium {
        background-color: var(--secondary-color);
        color: var(--text-color);
    }
    
    .priority-low {
        background-color: var(--border-color);
        color: var(--text-color);
    }
    
    /* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */
    .css-1d391kg {
        background-color: #f8f9fa;
    }
    
    /* –ö–Ω–æ–ø–∫–∏ */
    .stButton > button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        font-weight: 500;
        transition: all 0.2s;
    }
    
    .stButton > button:hover {
        background-color: #1e7e1e;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    /* –°–µ–ª–µ–∫—Ç–±–æ–∫—Å—ã */
    .stSelectbox > div > div {
        border-color: var(--border-color);
        border-radius: 0.375rem;
    }
    
    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–π */
    .section-header {
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 0.5rem;
        margin-bottom: 1.5rem;
    }
    
    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-color);
        margin: 0;
    }
    
    .section-description {
        font-size: 0.875rem;
        color: var(--muted-color);
        margin: 0.25rem 0 0 0;
    }
    
    /* –õ–æ–≥–æ—Ç–∏–ø */
    .logo-container {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        margin-bottom: 1rem;
    }
    
    .logo-dots {
        display: flex;
        gap: 0.25rem;
    }
    
    .logo-dot {
        width: 0.75rem;
        height: 2rem;
        border-radius: 0.125rem;
    }
    
    .logo-dot-1 { background-color: var(--accent-color); }
    .logo-dot-2 { background-color: var(--secondary-color); }
    .logo-dot-3 { background-color: var(--primary-color); }
    
    .logo-text h1 {
        font-size: 1rem;
        font-weight: 600;
        margin: 0;
        color: var(--text-color);
    }
    
    .logo-text p {
        font-size: 0.75rem;
        color: var(--muted-color);
        margin: 0;
    }
    
    /* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    .sidebar-info {
        margin-top: auto;
        padding-top: 2rem;
        border-top: 1px solid var(--border-color);
    }
    
    .sidebar-info p {
        font-size: 0.75rem;
        color: var(--muted-color);
        margin: 0.25rem 0;
    }
    
    /* –°–∫—Ä—ã—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ Streamlit */
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    
    /* Tabs —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è */
    .stTabs [data-baseweb="tab-list"] {
        gap: 0.5rem;
        background-color: #f7fafc;
        border-radius: 0.75rem;
        padding: 0.25rem;
    }
    
    .stTabs [data-baseweb="tab"] {
        background-color: transparent;
        border-radius: 0.5rem;
        color: var(--muted-color);
        font-weight: 500;
        padding: 0.5rem 1rem;
    }
    
    .stTabs [aria-selected="true"] {
        background-color: white;
        color: var(--text-color);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    </style>
    """, unsafe_allow_html=True)

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
@st.cache_data
def load_sample_data():
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    months = ["–Ø–Ω–≤", "–§–µ–≤", "–ú–∞—Ä", "–ê–ø—Ä", "–ú–∞–π", "–ò—é–Ω"]
    reports_data = [45, 52, 48, 61, 55, 67]
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    status_data = {
        "–°—Ç–∞—Ç—É—Å": ["–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", "–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "–û–∂–∏–¥–∞—é—Ç"],
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": [156, 89, 34],
        "–¶–≤–µ—Ç": ["#228B22", "#9ACD32", "#FFD700"]
    }
    
    # –î–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–æ–≤
    reports_df = pd.DataFrame({
        "ID": ["RPT-001", "RPT-002", "RPT-003", "RPT-004", "RPT-005"],
        "–ù–∞–∑–≤–∞–Ω–∏–µ": [
            "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç Q2",
            "–û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", 
            "HR –æ—Ç—á–µ—Ç –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—É",
            "–û—Ç—á–µ—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É",
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç"
        ],
        "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç": ["–§–∏–Ω–∞–Ω—Å—ã", "–ü—Ä–æ–¥–∞–∂–∏", "HR", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "IT"],
        "–°—Ç–∞—Ç—É—Å": ["–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", "–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "–û–∂–∏–¥–∞–µ—Ç", "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", "–í –ø—Ä–æ—Ü–µ—Å—Å–µ"],
        "–î–∞—Ç–∞": ["2024-06-15", "2024-06-14", "2024-06-13", "2024-06-12", "2024-06-11"],
        "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç": ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π", "–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π"]
    })
    
    return months, reports_data, status_data, reports_df

def render_sidebar():
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏"""
    with st.sidebar:
        # –õ–æ–≥–æ—Ç–∏–ø
        st.markdown("""
        <div class="logo-container">
            <div class="logo-dots">
                <div class="logo-dot logo-dot-1"></div>
                <div class="logo-dot logo-dot-2"></div>
                <div class="logo-dot logo-dot-3"></div>
            </div>
            <div class="logo-text">
                <h1>–°–∏—Å—Ç–µ–º–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏</h1>
                <p>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª</p>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
        st.subheader("–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã")
        
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è
        pages = {
            "üìä –î–∞—à–±–æ—Ä–¥": "dashboard",
            "üìö –û–±—É—á–µ–Ω–∏–µ": "training", 
            "üîÑ –≠—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞": "process",
            "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤": "upload",
            "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã": "faq",
            "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å": "feedback"
        }
        
        selected_page = st.radio("", list(pages.keys()), index=0)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏
        st.markdown("---")
        st.markdown("""
        <div class="sidebar-info">
            <p><strong>üè¢ –û–û–û "–ö–æ–º–ø–∞–Ω–∏—è"</strong></p>
            <p>–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã: 2.1.4</p>
            <p>–û–±–Ω–æ–≤–ª–µ–Ω–æ: 15.06.2024</p>
        </div>
        """, unsafe_allow_html=True)
        
        return pages[selected_page]

def render_metric_card(title, value, change=None, change_positive=True):
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–µ—Ç—Ä–∏–∫–∏"""
    change_class = "positive" if change_positive else "negative"
    change_html = f'<p class="metric-change {change_class}">{change}</p>' if change else ""
    
    st.markdown(f"""
    <div class="metric-card">
        <p class="metric-label">{title}</p>
        <p class="metric-value">{value}</p>
        {change_html}
    </div>
    """, unsafe_allow_html=True)

def render_status_badge(status):
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–µ–π–¥–∂–∞ —Å—Ç–∞—Ç—É—Å–∞"""
    status_classes = {
        "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω": "status-registered",
        "–í –ø—Ä–æ—Ü–µ—Å—Å–µ": "status-progress", 
        "–û–∂–∏–¥–∞–µ—Ç": "status-waiting",
        "–ö—Ä–∏—Ç–∏—á–Ω–æ": "status-critical"
    }
    
    class_name = status_classes.get(status, "status-progress")
    return f'<span class="status-badge {class_name}">{status}</span>'

def render_priority_badge(priority):
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–µ–π–¥–∂–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞"""
    priority_classes = {
        "–í—ã—Å–æ–∫–∏–π": "priority-high",
        "–°—Ä–µ–¥–Ω–∏–π": "priority-medium",
        "–ù–∏–∑–∫–∏–π": "priority-low"
    }
    
    class_name = priority_classes.get(priority, "priority-medium")
    return f'<span class="status-badge {class_name}">{priority}</span>'

def render_dashboard():
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞"""
    months, reports_data, status_data, reports_df = load_sample_data()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.markdown("""
    <div class="section-header">
        <h1 class="section-title">–î–∞—à–±–æ—Ä–¥</h1>
        <p class="section-description">–û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏</p>
    </div>
    """, unsafe_allow_html=True)
    
    # –¢–∞–±—ã
    tab1, tab2, tab3 = st.tabs([
        "–î–∞—à–±–æ—Ä–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤", 
        "–†–µ–µ—Å—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤", 
        "–ó–∞–ø—Ä–æ—Å—ã –≤ —Ä–∞–±–æ—Ç–µ"
    ])
    
    with tab1:
        # –ú–µ—Ç—Ä–∏–∫–∏
        st.markdown("### –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            render_metric_card("–í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤", "279", "+12% —Å –ø—Ä–æ—à–ª–æ–≥–æ –º–µ—Å—è—Ü–∞", True)
        
        with col2:
            render_metric_card("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", "156", "56% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞", True)
            
        with col3:
            render_metric_card("–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "89", "32% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞", True)
            
        with col4:
            render_metric_card("–û–∂–∏–¥–∞—é—Ç", "34", "12% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞", True)
        
        st.markdown("---")
        
        # –ì—Ä–∞—Ñ–∏–∫–∏
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("#### –î–∏–Ω–∞–º–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤")
            st.caption("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –º–µ—Å—è—Ü–∞–º")
            
            fig_bar = px.bar(
                x=months, 
                y=reports_data,
                color_discrete_sequence=["#228B22"]
            )
            fig_bar.update_layout(
                showlegend=False,
                xaxis_title="–ú–µ—Å—è—Ü",
                yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤",
                plot_bgcolor="white",
                paper_bgcolor="white",
                font=dict(color="#2d3748"),
                margin=dict(l=0, r=0, t=20, b=0)
            )
            fig_bar.update_xaxis(showgrid=True, gridcolor="#e2e8f0")
            fig_bar.update_yaxis(showgrid=True, gridcolor="#e2e8f0")
            st.plotly_chart(fig_bar, use_container_width=True)
        
        with col2:
            st.markdown("#### –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º")
            st.caption("–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤")
            
            fig_pie = px.pie(
                values=status_data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"],
                names=status_data["–°—Ç–∞—Ç—É—Å"],
                color_discrete_sequence=status_data["–¶–≤–µ—Ç"]
            )
            fig_pie.update_layout(
                showlegend=True,
                plot_bgcolor="white",
                paper_bgcolor="white", 
                font=dict(color="#2d3748"),
                margin=dict(l=0, r=0, t=20, b=0)
            )
            st.plotly_chart(fig_pie, use_container_width=True)
        
        st.markdown("---")
        
        # –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤
        st.markdown("#### –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã")
        st.caption("–°–ø–∏—Å–æ–∫ –Ω–µ–¥–∞–≤–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_df = reports_df.copy()
        display_df["–°—Ç–∞—Ç—É—Å"] = display_df["–°—Ç–∞—Ç—É—Å"].apply(render_status_badge)
        display_df["–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç"] = display_df["–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç"].apply(render_priority_badge)
        
        st.markdown(display_df.to_html(escape=False, index=False), unsafe_allow_html=True)
    
    with tab2:
        st.markdown("#### –†–µ–µ—Å—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤")
        st.caption("–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–µ—Å—Ç—Ä–∞
        col1, col2, col3, col4 = st.columns(4)
        with col1:
            render_metric_card("–í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤", "324")
        with col2:
            render_metric_card("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", "189")
        with col3:
            render_metric_card("–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "98")
        with col4:
            render_metric_card("–û–∂–∏–¥–∞—é—Ç", "37")
        
        # –§–∏–ª—å—Ç—Ä—ã
        st.markdown("#### –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫")
        col1, col2, col3, col4, col5 = st.columns(5)
        
        with col1:
            search_term = st.text_input("üîç –ü–æ–∏—Å–∫ –æ—Ç—á–µ—Ç–æ–≤...")
        with col2:
            status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å", ["–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã", "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", "–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "–û–∂–∏–¥–∞—é—Ç"])
        with col3:
            dept_filter = st.selectbox("–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç", ["–í—Å–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã", "–§–∏–Ω–∞–Ω—Å—ã", "–ü—Ä–æ–¥–∞–∂–∏", "HR", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "IT"])
        with col4:
            type_filter = st.selectbox("–¢–∏–ø –æ—Ç—á–µ—Ç–∞", ["–í—Å–µ —Ç–∏–ø—ã", "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π", "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π", "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π"])
        with col5:
            st.button("üì• –≠–∫—Å–ø–æ—Ä—Ç")
        
        # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
        st.markdown("#### –°–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤")
        st.caption(f"–ù–∞–π–¥–µ–Ω–æ {len(reports_df)} –æ—Ç—á–µ—Ç–æ–≤")
        st.dataframe(reports_df, use_container_width=True)
    
    with tab3:
        st.markdown("#### –ó–∞–ø—Ä–æ—Å—ã –≤ —Ä–∞–±–æ—Ç–µ")
        st.caption("–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á
        col1, col2, col3, col4 = st.columns(4)
        with col1:
            render_metric_card("–í—Å–µ–≥–æ –∑–∞–¥–∞—á", "23")
        with col2:
            render_metric_card("–ö—Ä–∏—Ç–∏—á–Ω—ã–µ", "5")
        with col3:
            render_metric_card("–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "12")
        with col4:
            render_metric_card("–û–∂–∏–¥–∞—é—Ç", "6")
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        st.markdown("#### –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏")
        
        tasks_data = {
            "ID": ["TASK-001", "TASK-002", "TASK-003"],
            "–ó–∞–¥–∞—á–∞": [
                "–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ Q4",
                "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ HR –æ—Ç—á–µ—Ç–∞", 
                "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –æ—Ç—á–µ—Ç–∞"
            ],
            "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": ["–ò–≤–∞–Ω–æ–≤–∞ –ê.–ü.", "–ö–æ–∑–ª–æ–≤–∞ –ï.–ú.", "–ú–æ—Ä–æ–∑–æ–≤ –ü.–ö."],
            "–°—Ç–∞—Ç—É—Å": ["–í –ø—Ä–æ—Ü–µ—Å—Å–µ", "–û–∂–∏–¥–∞–µ—Ç", "–ö—Ä–∏—Ç–∏—á–Ω–æ"],
            "–ü—Ä–æ–≥—Ä–µ—Å—Å": ["65%", "25%", "0%"],
            "–°—Ä–æ–∫": ["2024-02-20", "2024-02-25", "2024-02-21"]
        }
        
        tasks_df = pd.DataFrame(tasks_data)
        st.dataframe(tasks_df, use_container_width=True)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    load_css()
    
    # –†–µ–Ω–¥–µ—Ä–∏–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å –∏ –ø–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    selected_page = render_sidebar()
    
    # –†–µ–Ω–¥–µ—Ä–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if selected_page == "dashboard":
        render_dashboard()
    elif selected_page == "training":
        st.title("üìö –û–±—É—á–µ–Ω–∏–µ")
        st.info("–†–∞–∑–¥–µ–ª –æ–±—É—á–µ–Ω–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif selected_page == "process":
        st.title("üîÑ –≠—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞")
        st.info("–†–∞–∑–¥–µ–ª —ç—Ç–∞–ø–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif selected_page == "upload":
        st.title("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
        st.info("–†–∞–∑–¥–µ–ª –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif selected_page == "faq":
        st.title("‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        st.info("–†–∞–∑–¥–µ–ª FAQ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif selected_page == "feedback":
        st.title("üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
        st.info("–†–∞–∑–¥–µ–ª –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

if __name__ == "__main__":
    main()